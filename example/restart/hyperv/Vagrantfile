# -*- mode: ruby -*-
# vi: set ft=ruby :
#

Vagrant.configure("2") do |config|
  vm_name = "ao-restart"

  puts " "
  puts " Oracle Restart with Database in ASM"
  puts " "
  puts " Hostname: #{vm_name}"
  puts " Logins:"
  puts "           vagrant / vagrant"
  puts " "

  # Please define the folder to the extracted archives from Oracle
  #
  # config.vm.synced_folder ENV['VAGRANT_ANSIBLE_ORACLE_SW'], "/sw/oracle", disabled: false, mount_options: ["ro"]
  config.vm.synced_folder ".", "/vagrant", owner: "vagrant", group: "vagrant", smb_host: "172.17.160.1", smb_username: "vagrant", smb_password: "Vagrant_2024"

  # config.vm.disk size: "150GB", name: "#{vm_name}_oracle"
  # config.vm.disk :disk, size: "150GB", primary: true
  # config.vm.disk :disk, size: "30GB", primary: false, name: "#{vm_name}_oracle"

  config.vm.box =  "generic/oracle8"
  config.vm.box_check_update = false

  config.vm.network "private_network", bridge: "Default Switch"

  config.ssh.insert_key = true
  config.ssh.username = "vagrant"
  config.ssh.password = "vagrant"

  config.vm.hostname = "#{vm_name}.local"

  config.vm.provider "hyperv" do |vb|
    vb.vmname = vm_name
    vb.memory = "8500"
    vb.maxmemory  = "8500"
    vb.cpus = 2
  end

  config.vm.provision "shell", inline: <<-SHELL

    # if [ ! -b /dev/sdb ]; then
    #   echo "Please start the Box with following command once to create the addional disks!"
    #   echo "VAGRANT_EXPERIMENTAL=disks vagrant up"
    #   exit 1
    # fi

    # copy public key to vagrant user
    ssh_public_key=$(find /vagrant/*.pub -printf "%p")
    if test -f "$ssh_public_key" ; then
      echo "Check if public key $ssh_public_key is valid."
      if ssh-keygen -l -f "$ssh_public_key" ; then
        echo "Add public key to /home/vagrant/.ssh/authorized_keys"
        cat "$ssh_public_key" >> /home/vagrant/.ssh/authorized_keys
      fi
    fi

    sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
    systemctl restart sshd.service

    # swap for Oracle OPatch prepatching
    echo "add swap"
    dd if=/dev/zero of=/var/swapfile bs=1024000 count=14000 > /dev/null
    chmod 600 /var/swapfile
    mkswap /var/swapfile
    echo "/var/swapfile none                    swap    defaults        0 0" >> /etc/fstab 
    swapon -a
    echo ""
    echo "Show Memory"
    free -m
    echo ""

    yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm

    # mDNS
    yum install -y avahi avahi-tools
    systemctl enable --now avahi-daemon

    systemctl disable firewalld
    systemctl stop firewalld

    # Install Python3 on target host due to parallel installation of python 3.9
    # git is needed for the local clone of ansible-oracle
    yum install -y python3 git

    # # Clone ansible-oracle Repository
    # mkdir /home/vagrant/git
    # cd /home/vagrant/git

    # git clone https://github.com/oravirt/ansible-oracle.git
    # chown -R vagrant /home/vagrant/git

    # Update OS
    # yum install -y gcc make perl kernel-uek-devel bash-completion
    yum update -y

  SHELL
end
